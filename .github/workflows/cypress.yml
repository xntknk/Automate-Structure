name: Cypress Tests

on:
  push:
    branches:
      - main  # Run tests on pushes to the `main` branch
  pull_request:
    branches:
      - main
      - Ex  # Run tests for pull requests targeting the `main` branch

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env: [dev, staging] # Define environments to test (dev, staging)

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use Node.js v18 or any compatible version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Cache Cypress binary
      - name: Cache Cypress
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-

      # Step 5: Run Cypress tests for each environment
      - name: Run Cypress tests
        env:
          ENV: ${{ matrix.env }} # Set the environment (dev or staging)
        run: npx cypress run --env ENV=${{ matrix.env }}

      # Step 6: Upload test results (optional)
      - name: Upload Test Results
        if: always() # Always upload even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: cypress-results
          path: cypress/screenshots,cypress/videos
